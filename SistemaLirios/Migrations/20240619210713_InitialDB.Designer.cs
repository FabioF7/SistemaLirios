// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SistemaLirios.Data;

#nullable disable

namespace SistemaLirios.Migrations
{
    [DbContext(typeof(SistemaLiriosDBContext))]
    [Migration("20240619210713_InitialDB")]
    partial class InitialDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SistemaLirios.Models.ClienteModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("AlteradoPor")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<int?>("Bloqueado")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<string>("CEP")
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)");

                    b.Property<string>("CadastradoPor")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<long?>("Celular")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DtAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DtNascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Endereco")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<int?>("Inadimplencia")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<int?>("Indicacao")
                        .HasColumnType("integer");

                    b.Property<double?>("LimiteInadimplencia")
                        .HasColumnType("double precision");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Observacoes")
                        .HasColumnType("text");

                    b.Property<int>("Sexo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("SistemaLirios.Models.GastosModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("AlteradoPor")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("CadastradoPor")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTime?>("DtAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NomeGasto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("Recorrente")
                        .HasColumnType("integer");

                    b.Property<int>("TipoServicoId")
                        .HasColumnType("integer");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("TipoServicoId");

                    b.ToTable("Gastos");
                });

            modelBuilder.Entity("SistemaLirios.Models.HistoricoModel", b =>
                {
                    b.Property<double?>("CustoProduto")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("DataEvento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double?>("Lucro")
                        .HasColumnType("double precision");

                    b.Property<string>("Produto")
                        .HasColumnType("text");

                    b.Property<int?>("Quantidade")
                        .HasColumnType("integer");

                    b.Property<string>("TipoEvento")
                        .HasColumnType("text");

                    b.Property<double?>("Valor")
                        .HasColumnType("double precision");

                    b.ToTable("Historico");
                });

            modelBuilder.Entity("SistemaLirios.Models.InventarioDetalhesModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<int?>("Contabilizado")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<int?>("IdInventario")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<int?>("IdProduto")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<int?>("Previsao")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdInventario");

                    b.HasIndex("IdProduto");

                    b.ToTable("InventarioDetalhes");
                });

            modelBuilder.Entity("SistemaLirios.Models.InventarioModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<DateTime?>("Concluido")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Contabilizado_Total")
                        .HasColumnType("integer");

                    b.Property<string>("Contado_por")
                        .HasColumnType("text");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Obsevacoes")
                        .HasColumnType("text");

                    b.Property<string>("Revisado_por")
                        .HasColumnType("text");

                    b.Property<string>("Situacao")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Inventario");
                });

            modelBuilder.Entity("SistemaLirios.Models.OrigemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AlteradoPor")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<int?>("Ativo")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<string>("CadastradoPor")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTime?>("DtAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.ToTable("Origem");
                });

            modelBuilder.Entity("SistemaLirios.Models.PagamentoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CadastradoPor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DtPagamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MetodoPagamento")
                        .HasColumnType("integer");

                    b.Property<int>("TipoTransacao")
                        .HasColumnType("integer");

                    b.Property<double>("ValorPago")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Pagamento");
                });

            modelBuilder.Entity("SistemaLirios.Models.PerfilModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Ativo")
                        .HasColumnType("integer");

                    b.Property<string>("DescricaoPerfil")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<DateTime?>("DtAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NomePerfil")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Perfil");
                });

            modelBuilder.Entity("SistemaLirios.Models.PrestadorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AlteradoPor")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<int>("Ativo")
                        .HasColumnType("integer");

                    b.Property<string>("CadastradoPor")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTime?>("DtAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasMaxLength(455)
                        .HasColumnType("character varying(455)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("TipoServicoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TipoServicoId");

                    b.ToTable("Prestador");
                });

            modelBuilder.Entity("SistemaLirios.Models.ProdutoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AlteradoPor")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("CadastradoPor")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("Codigo")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<long?>("CodigoDeBarra")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DtAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("IdCategoria")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(455)
                        .HasColumnType("character varying(455)");

                    b.Property<int>("OrigemId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.Property<double>("ValorCusto")
                        .HasColumnType("double precision");

                    b.Property<double>("ValorVendaRevista")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("OrigemId");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("SistemaLirios.Models.ServicoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AlteradoPor")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<int>("Ativo")
                        .HasColumnType("integer");

                    b.Property<string>("CadastradoPor")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTime?>("DtAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("TipoServicoId")
                        .HasColumnType("integer");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("TipoServicoId");

                    b.ToTable("Servico");
                });

            modelBuilder.Entity("SistemaLirios.Models.TipoServicoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AlteradoPor")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<int>("Ativo")
                        .HasColumnType("integer");

                    b.Property<string>("CadastradoPor")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTime?>("DtAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NomeTipoServico")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("TipoServico");
                });

            modelBuilder.Entity("SistemaLirios.Models.UsuarioModel", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserID"));

                    b.Property<int>("Ativo")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DtAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdPerfil")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("UserID");

                    b.HasIndex("IdPerfil");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("SistemaLirios.Models.VendaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AlteradoPor")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("CadastradoPor")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<double>("CustoProduto")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("DtAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DtVenda")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdVenda")
                        .HasColumnType("integer");

                    b.Property<double>("Lucro")
                        .HasColumnType("double precision");

                    b.Property<int>("MetodoPagamento")
                        .HasColumnType("integer");

                    b.Property<int?>("PreVenda")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer");

                    b.Property<int>("TipoTransacao")
                        .HasColumnType("integer");

                    b.Property<double>("ValorVenda")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Venda");
                });

            modelBuilder.Entity("SistemaLirios.Models.GastosModel", b =>
                {
                    b.HasOne("SistemaLirios.Models.TipoServicoModel", "TipoServico")
                        .WithMany()
                        .HasForeignKey("TipoServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoServico");
                });

            modelBuilder.Entity("SistemaLirios.Models.InventarioDetalhesModel", b =>
                {
                    b.HasOne("SistemaLirios.Models.InventarioModel", "Inventario")
                        .WithMany()
                        .HasForeignKey("IdInventario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaLirios.Models.ProdutoModel", "Produto")
                        .WithMany()
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventario");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("SistemaLirios.Models.PagamentoModel", b =>
                {
                    b.HasOne("SistemaLirios.Models.ClienteModel", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("SistemaLirios.Models.PrestadorModel", b =>
                {
                    b.HasOne("SistemaLirios.Models.TipoServicoModel", "TipoServico")
                        .WithMany()
                        .HasForeignKey("TipoServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoServico");
                });

            modelBuilder.Entity("SistemaLirios.Models.ProdutoModel", b =>
                {
                    b.HasOne("SistemaLirios.Models.OrigemModel", "Origem")
                        .WithMany()
                        .HasForeignKey("OrigemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Origem");
                });

            modelBuilder.Entity("SistemaLirios.Models.ServicoModel", b =>
                {
                    b.HasOne("SistemaLirios.Models.TipoServicoModel", "TipoServico")
                        .WithMany()
                        .HasForeignKey("TipoServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoServico");
                });

            modelBuilder.Entity("SistemaLirios.Models.UsuarioModel", b =>
                {
                    b.HasOne("SistemaLirios.Models.PerfilModel", "Perfil")
                        .WithMany()
                        .HasForeignKey("IdPerfil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("SistemaLirios.Models.VendaModel", b =>
                {
                    b.HasOne("SistemaLirios.Models.ClienteModel", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaLirios.Models.ProdutoModel", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Produto");
                });
#pragma warning restore 612, 618
        }
    }
}
